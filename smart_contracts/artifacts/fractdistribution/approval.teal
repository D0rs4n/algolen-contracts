#pragma version 8
intcblock 0 1 4
txn NumAppArgs
intc_0 // 0
==
bnz main_l6
txna ApplicationArgs 0
pushbytes 0x45a86101 // "init_fractic_nft_flow(axfer)void"
==
bnz main_l5
txna ApplicationArgs 0
pushbytes 0x2edef112 // "opt_in_to_asset(pay)bool"
==
bnz main_l4
err
main_l4:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub optintoassetcaster_5
intc_1 // 1
return
main_l5:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub initfracticnftflowcaster_4
intc_1 // 1
return
main_l6:
txn OnCompletion
intc_0 // NoOp
==
bnz main_l12
txn OnCompletion
intc_2 // UpdateApplication
==
bnz main_l11
txn OnCompletion
pushint 5 // DeleteApplication
==
bnz main_l10
err
main_l10:
txn ApplicationID
intc_0 // 0
!=
assert
callsub delete_1
intc_1 // 1
return
main_l11:
txn ApplicationID
intc_0 // 0
!=
assert
callsub update_0
intc_1 // 1
return
main_l12:
txn ApplicationID
intc_0 // 0
==
assert
intc_1 // 1
return

// update
update_0:
proto 0 0
txn Sender
global CreatorAddress
==
// unauthorized
assert
pushint TMPL_UPDATABLE // TMPL_UPDATABLE
// Check app is updatable
assert
retsub

// delete
delete_1:
proto 0 0
txn Sender
global CreatorAddress
==
// unauthorized
assert
pushint TMPL_DELETABLE // TMPL_DELETABLE
// Check app is deletable
assert
retsub

// init_fractic_nft_flow
initfracticnftflow_2:
proto 1 0
retsub

// opt_in_to_asset
optintoasset_3:
proto 1 1
intc_0 // 0
txn NumAssets
intc_0 // 0
==
!
assert
txna Assets 0
asset_params_get AssetDecimals
store 1
store 0
load 1
assert
load 0
intc_0 // 0
==
assert
txna Assets 0
asset_params_get AssetTotal
store 3
store 2
load 3
assert
load 2
intc_1 // 1
==
assert
frame_dig -1
gtxns Sender
txn Sender
==
assert
frame_dig -1
gtxns Receiver
global CurrentApplicationAddress
==
assert
frame_dig -1
gtxns Amount
pushint 5000000 // 5000000
==
assert
txna Assets 0
itob
box_del
pop
txna Assets 0
itob
txn Sender
box_put
intc_1 // 1
frame_bury 0
retsub

// init_fractic_nft_flow_caster
initfracticnftflowcaster_4:
proto 0 0
intc_0 // 0
txn GroupIndex
intc_1 // 1
-
frame_bury 0
frame_dig 0
gtxns TypeEnum
intc_2 // axfer
==
assert
frame_dig 0
callsub initfracticnftflow_2
retsub

// opt_in_to_asset_caster
optintoassetcaster_5:
proto 0 0
intc_0 // 0
dup
txn GroupIndex
intc_1 // 1
-
frame_bury 1
frame_dig 1
gtxns TypeEnum
intc_1 // pay
==
assert
frame_dig 1
callsub optintoasset_3
frame_bury 0
pushbytes 0x151f7c75 // 0x151f7c75
pushbytes 0x00 // 0x00
intc_0 // 0
frame_dig 0
setbit
concat
log
retsub