#pragma version 8
intcblock 0 1
bytecblock 0x
txn NumAppArgs
intc_0 // 0
==
bnz main_l4
txna ApplicationArgs 0
pushbytes 0xf5dd291c // "create_buy_order(pay,uint64,uint64,uint64,uint64)bool"
==
bnz main_l3
err
main_l3:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub createbuyordercaster_3
intc_1 // 1
return
main_l4:
txn OnCompletion
intc_0 // NoOp
==
bnz main_l10
txn OnCompletion
pushint 4 // UpdateApplication
==
bnz main_l9
txn OnCompletion
pushint 5 // DeleteApplication
==
bnz main_l8
err
main_l8:
txn ApplicationID
intc_0 // 0
!=
assert
callsub delete_1
intc_1 // 1
return
main_l9:
txn ApplicationID
intc_0 // 0
!=
assert
callsub update_0
intc_1 // 1
return
main_l10:
txn ApplicationID
intc_0 // 0
==
assert
intc_1 // 1
return

// update
update_0:
proto 0 0
txn Sender
global CreatorAddress
==
// unauthorized
assert
pushint TMPL_UPDATABLE // TMPL_UPDATABLE
// Check app is updatable
assert
retsub

// delete
delete_1:
proto 0 0
txn Sender
global CreatorAddress
==
// unauthorized
assert
pushint TMPL_DELETABLE // TMPL_DELETABLE
// Check app is deletable
assert
retsub

// create_buy_order
createbuyorder_2:
proto 5 1
intc_0 // 0
bytec_0 // ""
dup
intc_0 // 0
dup
bytec_0 // ""
dup
frame_dig -4
itob
box_len
store 1
store 0
load 1
!
assert
frame_dig -4
itob
box_len
store 3
store 2
load 3
!
assert
frame_dig -5
gtxns Sender
txn Sender
==
assert
frame_dig -5
gtxns Receiver
global CurrentApplicationAddress
==
assert
frame_dig -5
gtxns Amount
frame_dig -2
frame_dig -1
*
==
assert
txn Sender
frame_bury 1
frame_dig 1
len
pushint 32 // 32
==
assert
frame_dig 1
frame_dig -3
itob
concat
frame_dig -2
itob
concat
frame_dig -1
itob
concat
frame_bury 2
frame_dig -4
itob
box_del
pop
frame_dig -4
itob
frame_dig 2
box_put
intc_1 // 1
frame_bury 0
retsub

// create_buy_order_caster
createbuyordercaster_3:
proto 0 0
intc_0 // 0
dupn 5
txna ApplicationArgs 1
btoi
frame_bury 2
txna ApplicationArgs 2
btoi
frame_bury 3
txna ApplicationArgs 3
btoi
frame_bury 4
txna ApplicationArgs 4
btoi
frame_bury 5
txn GroupIndex
intc_1 // 1
-
frame_bury 1
frame_dig 1
gtxns TypeEnum
intc_1 // pay
==
assert
frame_dig 1
frame_dig 2
frame_dig 3
frame_dig 4
frame_dig 5
callsub createbuyorder_2
frame_bury 0
pushbytes 0x151f7c75 // 0x151f7c75
pushbytes 0x00 // 0x00
intc_0 // 0
frame_dig 0
setbit
concat
log
retsub