{
    "hints": {
        "list_nft(axfer,uint64,uint64,uint64)bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "delist_nft(pay)bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "opt_in_to_asset(pay)bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "rent_nft(pay,uint64)bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "return_nft(axfer)bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "claim_deposit()bool": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKcHVzaGludCAwIC8vIDAKcmV0dXJu"
    },
    "state": {
        "global": {
            "num_byte_slices": 0,
            "num_uints": 0
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {},
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "algolen",
        "methods": [
            {
                "name": "list_nft",
                "args": [
                    {
                        "type": "axfer",
                        "name": "asset_transfer_txn"
                    },
                    {
                        "type": "uint64",
                        "name": "deposit"
                    },
                    {
                        "type": "uint64",
                        "name": "price_per_day"
                    },
                    {
                        "type": "uint64",
                        "name": "max_duration_in_days"
                    }
                ],
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "delist_nft",
                "args": [
                    {
                        "type": "pay",
                        "name": "fee_payment_txn"
                    }
                ],
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "opt_in_to_asset",
                "args": [
                    {
                        "type": "pay",
                        "name": "deposit_payment_txn"
                    }
                ],
                "returns": {
                    "type": "bool"
                },
                "desc": "An opt-in contract method\nOne time payment of LISTING_FEE_MICROALGO amount covers opt in, box creation for this nft and a small fee for the platform usage This fee is to be paid per NFT and permanently enables the listing of this NFT"
            },
            {
                "name": "rent_nft",
                "args": [
                    {
                        "type": "pay",
                        "name": "payment_txn"
                    },
                    {
                        "type": "uint64",
                        "name": "duration_in_days"
                    }
                ],
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "return_nft",
                "args": [
                    {
                        "type": "axfer",
                        "name": "asset_transfer_txn"
                    }
                ],
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "claim_deposit",
                "args": [],
                "returns": {
                    "type": "bool"
                }
            }
        ],
        "networks": {},
        "desc": "Algolen Contract"
    },
    "bare_call_config": {
        "delete_application": "CALL",
        "no_op": "CREATE",
        "update_application": "CALL"
    }
}