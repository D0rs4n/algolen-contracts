#pragma version 8
intcblock 0 1 4 8
bytecblock 0x 0x151f7c75 0x00
txn NumAppArgs
intc_0 // 0
==
bnz main_l14
txna ApplicationArgs 0
pushbytes 0x53416d38 // "list_nft(axfer,uint64,uint64,uint64)bool"
==
bnz main_l13
txna ApplicationArgs 0
pushbytes 0xe0d1da6c // "delist_nft(pay)bool"
==
bnz main_l12
txna ApplicationArgs 0
pushbytes 0x2edef112 // "opt_in_to_asset(pay)bool"
==
bnz main_l11
txna ApplicationArgs 0
pushbytes 0x98383fd3 // "rent_nft(pay,uint64)bool"
==
bnz main_l10
txna ApplicationArgs 0
pushbytes 0x30c5474f // "return_nft(axfer)bool"
==
bnz main_l9
txna ApplicationArgs 0
pushbytes 0x98d25c0e // "claim_deposit()bool"
==
bnz main_l8
err
main_l8:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub claimdepositcaster_13
intc_1 // 1
return
main_l9:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub returnnftcaster_12
intc_1 // 1
return
main_l10:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub rentnftcaster_11
intc_1 // 1
return
main_l11:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub optintoassetcaster_10
intc_1 // 1
return
main_l12:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub delistnftcaster_9
intc_1 // 1
return
main_l13:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub listnftcaster_8
intc_1 // 1
return
main_l14:
txn OnCompletion
intc_0 // NoOp
==
bnz main_l20
txn OnCompletion
intc_2 // UpdateApplication
==
bnz main_l19
txn OnCompletion
pushint 5 // DeleteApplication
==
bnz main_l18
err
main_l18:
txn ApplicationID
intc_0 // 0
!=
assert
callsub delete_1
intc_1 // 1
return
main_l19:
txn ApplicationID
intc_0 // 0
!=
assert
callsub update_0
intc_1 // 1
return
main_l20:
txn ApplicationID
intc_0 // 0
==
assert
intc_1 // 1
return

// update
update_0:
proto 0 0
txn Sender
global CreatorAddress
==
// unauthorized
assert
pushint TMPL_UPDATABLE // TMPL_UPDATABLE
// Check app is updatable
assert
retsub

// delete
delete_1:
proto 0 0
txn Sender
global CreatorAddress
==
// unauthorized
assert
pushint TMPL_DELETABLE // TMPL_DELETABLE
// Check app is deletable
assert
retsub

// list_nft
listnft_2:
proto 4 1
intc_0 // 0
bytec_0 // ""
dup
intc_0 // 0
dup
bytec_0 // ""
dup
frame_dig -2
intc_0 // 0
>
assert
frame_dig -3
intc_0 // 0
>
assert
txna Assets 0
frame_dig -4
gtxns XferAsset
==
assert
txn Sender
frame_bury 1
frame_dig 1
len
pushint 32 // 32
==
assert
frame_dig -3
itob
frame_dig -2
itob
concat
frame_dig -1
itob
concat
frame_dig 1
concat
frame_bury 2
txna Assets 0
itob
box_del
pop
txna Assets 0
itob
frame_dig 2
box_put
intc_1 // 1
frame_bury 0
retsub

// delist_nft
delistnft_3:
proto 1 1
intc_0 // 0
bytec_0 // ""
dup
frame_dig -1
gtxns Receiver
global CurrentApplicationAddress
==
assert
frame_dig -1
gtxns Amount
pushint 1000 // 1000
==
assert
txna Assets 0
itob
box_get
store 1
store 0
load 1
assert
load 0
frame_bury 1
frame_dig 1
extract 24 0
frame_bury 2
frame_dig 2
txn Sender
==
assert
itxn_begin
intc_2 // axfer
itxn_field TypeEnum
intc_1 // 1
itxn_field AssetAmount
txn Sender
itxn_field AssetReceiver
txna Assets 0
itxn_field XferAsset
itxn_submit
txna Assets 0
itob
box_del
assert
intc_1 // 1
frame_bury 0
retsub

// opt_in_to_asset
optintoasset_4:
proto 1 1
intc_0 // 0
txn NumAssets
intc_0 // 0
==
!
assert
txna Assets 0
asset_params_get AssetDecimals
store 3
store 2
load 3
assert
load 2
intc_0 // 0
==
assert
txna Assets 0
asset_params_get AssetTotal
store 5
store 4
load 5
assert
load 4
intc_1 // 1
==
assert
frame_dig -1
gtxns Sender
txn Sender
==
assert
frame_dig -1
gtxns Receiver
global CurrentApplicationAddress
==
assert
frame_dig -1
gtxns Amount
pushint 1000000 // 1000000
==
assert
itxn_begin
intc_2 // axfer
itxn_field TypeEnum
intc_0 // 0
itxn_field AssetAmount
global CurrentApplicationAddress
itxn_field AssetReceiver
txna Assets 0
itxn_field XferAsset
itxn_submit
intc_1 // 1
frame_bury 0
retsub

// rent_nft
rentnft_5:
proto 2 1
intc_0 // 0
bytec_0 // ""
intc_0 // 0
dupn 2
bytec_0 // ""
dup
intc_0 // 0
bytec_0 // ""
intc_0 // 0
dup
bytec_0 // ""
dup
txna Assets 0
itob
box_get
store 7
store 6
load 7
assert
load 6
frame_bury 1
frame_dig 1
intc_0 // 0
extract_uint64
frame_bury 2
frame_dig 1
intc_3 // 8
extract_uint64
frame_bury 3
frame_dig 1
pushint 16 // 16
extract_uint64
frame_bury 4
frame_dig 1
extract 24 0
frame_bury 5
txn Sender
frame_bury 6
frame_dig 6
len
pushint 32 // 32
==
assert
frame_dig -1
intc_0 // 0
>
assert
frame_dig 4
frame_dig -1
>=
assert
frame_dig -2
gtxns Amount
frame_dig 2
frame_dig -1
frame_dig 3
*
+
pushint 4000 // 4000
+
==
assert
pushint 86400 // 86400
frame_dig -1
*
txn FirstValidTime
+
frame_bury 7
frame_dig 7
itob
frame_dig 2
itob
concat
frame_dig 5
concat
frame_dig 6
concat
frame_bury 8
txna Assets 0
itob
box_del
assert
txna Assets 0
itob
box_del
pop
txna Assets 0
itob
frame_dig 8
box_put
itxn_begin
intc_2 // axfer
itxn_field TypeEnum
intc_1 // 1
itxn_field AssetAmount
frame_dig 6
itxn_field AssetReceiver
txna Assets 0
itxn_field XferAsset
itxn_submit
itxn_begin
intc_1 // pay
itxn_field TypeEnum
frame_dig -1
frame_dig 3
*
itxn_field Amount
frame_dig 5
itxn_field Receiver
itxn_submit
intc_1 // 1
frame_bury 0
retsub

// return_nft
returnnft_6:
proto 1 1
intc_0 // 0
bytec_0 // ""
intc_0 // 0
dup
bytec_0 // ""
dup
txna Assets 0
frame_dig -1
gtxns XferAsset
==
assert
txna Assets 0
itob
box_get
store 9
store 8
load 9
assert
load 8
frame_bury 1
frame_dig 1
intc_3 // 8
extract_uint64
frame_bury 2
frame_dig 1
intc_0 // 0
extract_uint64
frame_bury 3
frame_dig 1
extract 16 32
frame_bury 4
frame_dig 1
extract 48 0
frame_bury 5
txn FirstValidTime
frame_dig 3
<
assert
itxn_begin
intc_1 // pay
itxn_field TypeEnum
frame_dig 2
itxn_field Amount
txn Sender
itxn_field Receiver
itxn_submit
itxn_begin
intc_2 // axfer
itxn_field TypeEnum
intc_1 // 1
itxn_field AssetAmount
frame_dig 4
itxn_field AssetReceiver
txna Assets 0
itxn_field XferAsset
itxn_submit
txna Assets 0
itob
box_del
assert
intc_1 // 1
frame_bury 0
retsub

// claim_deposit
claimdeposit_7:
proto 0 1
intc_0 // 0
bytec_0 // ""
intc_0 // 0
dup
bytec_0 // ""
txna Assets 0
itob
box_get
store 11
store 10
load 11
assert
load 10
frame_bury 1
frame_dig 1
intc_3 // 8
extract_uint64
frame_bury 2
frame_dig 1
intc_0 // 0
extract_uint64
frame_bury 3
frame_dig 1
extract 16 32
frame_bury 4
frame_dig 4
txn Sender
==
assert
txn FirstValidTime
frame_dig 3
>
assert
itxn_begin
intc_1 // pay
itxn_field TypeEnum
frame_dig 2
itxn_field Amount
frame_dig 4
itxn_field Receiver
itxn_submit
txna Assets 0
itob
box_del
assert
intc_1 // 1
frame_bury 0
retsub

// list_nft_caster
listnftcaster_8:
proto 0 0
intc_0 // 0
dupn 4
txna ApplicationArgs 1
btoi
frame_bury 2
txna ApplicationArgs 2
btoi
frame_bury 3
txna ApplicationArgs 3
btoi
frame_bury 4
txn GroupIndex
intc_1 // 1
-
frame_bury 1
frame_dig 1
gtxns TypeEnum
intc_2 // axfer
==
assert
frame_dig 1
frame_dig 2
frame_dig 3
frame_dig 4
callsub listnft_2
frame_bury 0
bytec_1 // 0x151f7c75
bytec_2 // 0x00
intc_0 // 0
frame_dig 0
setbit
concat
log
retsub

// delist_nft_caster
delistnftcaster_9:
proto 0 0
intc_0 // 0
dup
txn GroupIndex
intc_1 // 1
-
frame_bury 1
frame_dig 1
gtxns TypeEnum
intc_1 // pay
==
assert
frame_dig 1
callsub delistnft_3
frame_bury 0
bytec_1 // 0x151f7c75
bytec_2 // 0x00
intc_0 // 0
frame_dig 0
setbit
concat
log
retsub

// opt_in_to_asset_caster
optintoassetcaster_10:
proto 0 0
intc_0 // 0
dup
txn GroupIndex
intc_1 // 1
-
frame_bury 1
frame_dig 1
gtxns TypeEnum
intc_1 // pay
==
assert
frame_dig 1
callsub optintoasset_4
frame_bury 0
bytec_1 // 0x151f7c75
bytec_2 // 0x00
intc_0 // 0
frame_dig 0
setbit
concat
log
retsub

// rent_nft_caster
rentnftcaster_11:
proto 0 0
intc_0 // 0
dupn 2
txna ApplicationArgs 1
btoi
frame_bury 2
txn GroupIndex
intc_1 // 1
-
frame_bury 1
frame_dig 1
gtxns TypeEnum
intc_1 // pay
==
assert
frame_dig 1
frame_dig 2
callsub rentnft_5
frame_bury 0
bytec_1 // 0x151f7c75
bytec_2 // 0x00
intc_0 // 0
frame_dig 0
setbit
concat
log
retsub

// return_nft_caster
returnnftcaster_12:
proto 0 0
intc_0 // 0
dup
txn GroupIndex
intc_1 // 1
-
frame_bury 1
frame_dig 1
gtxns TypeEnum
intc_2 // axfer
==
assert
frame_dig 1
callsub returnnft_6
frame_bury 0
bytec_1 // 0x151f7c75
bytec_2 // 0x00
intc_0 // 0
frame_dig 0
setbit
concat
log
retsub

// claim_deposit_caster
claimdepositcaster_13:
proto 0 0
intc_0 // 0
callsub claimdeposit_7
frame_bury 0
bytec_1 // 0x151f7c75
bytec_2 // 0x00
intc_0 // 0
frame_dig 0
setbit
concat
log
retsub