#pragma version 8
intcblock 0 1 4
bytecblock 0x 0x151f7c75 0x00
txn NumAppArgs
intc_0 // 0
==
bnz main_l8
txna ApplicationArgs 0
pushbytes 0x53416d38 // "list_nft(axfer,uint64,uint64,uint64)bool"
==
bnz main_l7
txna ApplicationArgs 0
pushbytes 0x26a05484 // "delist_nft(pay,uint64)bool"
==
bnz main_l6
txna ApplicationArgs 0
pushbytes 0x2edef112 // "opt_in_to_asset(pay)bool"
==
bnz main_l5
err
main_l5:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub optintoassetcaster_7
intc_1 // 1
return
main_l6:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub delistnftcaster_6
intc_1 // 1
return
main_l7:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub listnftcaster_5
intc_1 // 1
return
main_l8:
txn OnCompletion
intc_0 // NoOp
==
bnz main_l14
txn OnCompletion
intc_2 // UpdateApplication
==
bnz main_l13
txn OnCompletion
pushint 5 // DeleteApplication
==
bnz main_l12
err
main_l12:
txn ApplicationID
intc_0 // 0
!=
assert
callsub delete_1
intc_1 // 1
return
main_l13:
txn ApplicationID
intc_0 // 0
!=
assert
callsub update_0
intc_1 // 1
return
main_l14:
txn ApplicationID
intc_0 // 0
==
assert
intc_1 // 1
return

// update
update_0:
proto 0 0
txn Sender
global CreatorAddress
==
// unauthorized
assert
pushint TMPL_UPDATABLE // TMPL_UPDATABLE
// Check app is updatable
assert
retsub

// delete
delete_1:
proto 0 0
txn Sender
global CreatorAddress
==
// unauthorized
assert
pushint TMPL_DELETABLE // TMPL_DELETABLE
// Check app is deletable
assert
retsub

// list_nft
listnft_2:
proto 4 1
intc_0 // 0
bytec_0 // ""
intc_0 // 0
bytec_0 // ""
intc_0 // 0
dup
bytec_0 // ""
dup
txna Assets 0
frame_dig -4
gtxns XferAsset
==
assert
txna Assets 0
frame_bury 2
txn Sender
frame_bury 1
frame_dig 1
len
pushint 32 // 32
==
assert
frame_dig 2
itob
frame_dig -3
itob
concat
frame_dig -2
itob
concat
frame_dig -1
itob
concat
frame_dig 1
concat
frame_bury 3
frame_dig 2
itob
box_del
pop
frame_dig 2
itob
frame_dig 3
box_put
intc_1 // 1
frame_bury 0
retsub

// delist_nft
delistnft_3:
proto 2 1
intc_0 // 0
bytec_0 // ""
dup
frame_dig -2
gtxns Receiver
global CurrentApplicationAddress
==
assert
frame_dig -2
gtxns Amount
pushint 1000 // 1000
==
assert
frame_dig -1
itob
box_get
store 1
store 0
load 1
assert
load 0
frame_bury 1
frame_dig 1
extract 32 0
frame_bury 2
frame_dig 2
txn Sender
==
assert
itxn_begin
intc_2 // axfer
itxn_field TypeEnum
intc_1 // 1
itxn_field AssetAmount
txn Sender
itxn_field AssetReceiver
frame_dig -1
itxn_field XferAsset
itxn_submit
frame_dig -1
itob
box_del
assert
intc_1 // 1
frame_bury 0
retsub

// opt_in_to_asset
optintoasset_4:
proto 1 1
intc_0 // 0
txn NumAssets
intc_0 // 0
==
!
assert
txna Assets 0
asset_params_get AssetDecimals
store 3
store 2
load 3
assert
load 2
intc_0 // 0
==
assert
txna Assets 0
asset_params_get AssetTotal
store 5
store 4
load 5
assert
load 4
intc_1 // 1
==
assert
frame_dig -1
gtxns Sender
txn Sender
==
assert
frame_dig -1
gtxns Receiver
global CurrentApplicationAddress
==
assert
frame_dig -1
gtxns Amount
pushint 1000000 // 1000000
==
assert
itxn_begin
intc_2 // axfer
itxn_field TypeEnum
intc_0 // 0
itxn_field AssetAmount
global CurrentApplicationAddress
itxn_field AssetReceiver
txna Assets 0
itxn_field XferAsset
itxn_submit
intc_1 // 1
frame_bury 0
retsub

// list_nft_caster
listnftcaster_5:
proto 0 0
intc_0 // 0
dupn 4
txna ApplicationArgs 1
btoi
frame_bury 2
txna ApplicationArgs 2
btoi
frame_bury 3
txna ApplicationArgs 3
btoi
frame_bury 4
txn GroupIndex
intc_1 // 1
-
frame_bury 1
frame_dig 1
gtxns TypeEnum
intc_2 // axfer
==
assert
frame_dig 1
frame_dig 2
frame_dig 3
frame_dig 4
callsub listnft_2
frame_bury 0
bytec_1 // 0x151f7c75
bytec_2 // 0x00
intc_0 // 0
frame_dig 0
setbit
concat
log
retsub

// delist_nft_caster
delistnftcaster_6:
proto 0 0
intc_0 // 0
dupn 2
txna ApplicationArgs 1
btoi
frame_bury 2
txn GroupIndex
intc_1 // 1
-
frame_bury 1
frame_dig 1
gtxns TypeEnum
intc_1 // pay
==
assert
frame_dig 1
frame_dig 2
callsub delistnft_3
frame_bury 0
bytec_1 // 0x151f7c75
bytec_2 // 0x00
intc_0 // 0
frame_dig 0
setbit
concat
log
retsub

// opt_in_to_asset_caster
optintoassetcaster_7:
proto 0 0
intc_0 // 0
dup
txn GroupIndex
intc_1 // 1
-
frame_bury 1
frame_dig 1
gtxns TypeEnum
intc_1 // pay
==
assert
frame_dig 1
callsub optintoasset_4
frame_bury 0
bytec_1 // 0x151f7c75
bytec_2 // 0x00
intc_0 // 0
frame_dig 0
setbit
concat
log
retsub