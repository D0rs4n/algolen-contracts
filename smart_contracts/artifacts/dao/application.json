{
    "hints": {
        "set_gov(uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "gov_opt_in()bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "deposit(axfer)bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "vote(uint64,uint64)(string,string,uint64,uint64,uint64,uint64,uint64)": {
            "structs": {
                "output": {
                    "name": "Proposal",
                    "elements": [
                        [
                            "name",
                            "string"
                        ],
                        [
                            "url",
                            "string"
                        ],
                        [
                            "voting_start",
                            "uint64"
                        ],
                        [
                            "voting_end",
                            "uint64"
                        ],
                        [
                            "yes",
                            "uint64"
                        ],
                        [
                            "no",
                            "uint64"
                        ],
                        [
                            "abstain",
                            "uint64"
                        ]
                    ]
                }
            },
            "call_config": {
                "no_op": "CALL"
            }
        },
        "add_output((string,string,uint64,uint64,uint64,uint64,uint64))void": {
            "structs": {
                "proposal": {
                    "name": "Proposal",
                    "elements": [
                        [
                            "name",
                            "string"
                        ],
                        [
                            "url",
                            "string"
                        ],
                        [
                            "voting_start",
                            "uint64"
                        ],
                        [
                            "voting_end",
                            "uint64"
                        ],
                        [
                            "yes",
                            "uint64"
                        ],
                        [
                            "no",
                            "uint64"
                        ],
                        [
                            "abstain",
                            "uint64"
                        ]
                    ]
                }
            },
            "call_config": {
                "no_op": "CALL"
            }
        },
        "hello(string)string": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKcHVzaGludCAwIC8vIDAKcmV0dXJu"
    },
    "state": {
        "global": {
            "num_byte_slices": 0,
            "num_uints": 5
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {
                "curr_id": {
                    "type": "uint64",
                    "key": "curr_id",
                    "descr": ""
                },
                "gov": {
                    "type": "uint64",
                    "key": "gov",
                    "descr": ""
                },
                "max_duration": {
                    "type": "uint64",
                    "key": "max_duration",
                    "descr": ""
                },
                "min_duration": {
                    "type": "uint64",
                    "key": "min_duration",
                    "descr": ""
                },
                "min_support": {
                    "type": "uint64",
                    "key": "min_support",
                    "descr": ""
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "dao",
        "methods": [
            {
                "name": "set_gov",
                "args": [
                    {
                        "type": "uint64",
                        "name": "gov"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "gov_opt_in",
                "args": [],
                "returns": {
                    "type": "bool"
                },
                "desc": "An opt-in contract method\nThat will make the contract to opt-in to the gov token of the contract,"
            },
            {
                "name": "deposit",
                "args": [
                    {
                        "type": "axfer",
                        "name": "txn"
                    }
                ],
                "returns": {
                    "type": "bool"
                },
                "desc": "An deposit contract method\nThat will check whether the deposit is valid, and store the deposit in the contract's state"
            },
            {
                "name": "vote",
                "args": [
                    {
                        "type": "uint64",
                        "name": "proposal_id"
                    },
                    {
                        "type": "uint64",
                        "name": "vote"
                    }
                ],
                "returns": {
                    "type": "(string,string,uint64,uint64,uint64,uint64,uint64)"
                },
                "desc": "An vote contract method\nThat will check whether the vote is valid, and store the vote in the contract's state"
            },
            {
                "name": "add_output",
                "args": [
                    {
                        "type": "(string,string,uint64,uint64,uint64,uint64,uint64)",
                        "name": "proposal"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "hello",
                "args": [
                    {
                        "type": "string",
                        "name": "name"
                    }
                ],
                "returns": {
                    "type": "string"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "delete_application": "CALL",
        "no_op": "CREATE",
        "update_application": "CALL"
    }
}